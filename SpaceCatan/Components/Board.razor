<div class="board">
	@for (int y = 0; y < 5; y++)
	{
		@for (int x = 0; x < 5; x++)
		{
			Planet p = Map.GetPlanet(x, y);
			<div class="cell">
				<svg viewBox="0 0 256 256" width="100%">
					@{
						var roads = Map.GetRoads(x, y);
					}
					<line x1="50%" y1="50%" x2="50%" y2="0%" stroke-width="5%" stroke="@GetPlayerColor(roads.Up)" />
					<line x1="50%" y1="50%" x2="50%" y2="100%" stroke-width="5%" stroke="@GetPlayerColor(roads.Down)" />
					<line x1="50%" y1="50%" x2="0%" y2="50%" stroke-width="5%" stroke="@GetPlayerColor(roads.Left)" />
					<line x1="50%" y1="50%" x2="100%" y2="50%" stroke-width="5%" stroke="@GetPlayerColor(roads.Right)" />
					<image class="colony" x="40%" width="25%" height="25%" href="/img/VeryCoolColony.png" />
					<image href="@GetPlanetImage(p.Kind)" x="20%" y="20%" width="60%" height="60%" />
					@if (p.Kind is not (PlanetKind.EMPTY or PlanetKind.OUTPOST))
					{
						<text>
							<text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" stroke="white" font-weight="bold" font-size="50px">@p.Number</text>
						</text>
					}
				</svg>
			</div>
		}
	}
</div>

@code {
	[Parameter]
	public Map Map { get; set; } = null!;

	private static string GetPlanetImage(PlanetKind kind) => kind switch
	{
		PlanetKind.GRAVITRONIUM => "/img/GravitroniumPlanet.png",
		PlanetKind.COBALT => "/img/CobaltPlanet.png",
		PlanetKind.OXYGEN => "/img/OxygenPlanet.png",
		PlanetKind.FOOD => "/img/FoodPlanet.png",
		PlanetKind.WATER => "/img/WaterPlanet.png",
		PlanetKind.OUTPOST => "/img/Outpost.png",
		PlanetKind.EMPTY => "/img/EmptyPlanet.png",
		_ => ""
	};

	public static string GetPlayerColor(int? id) => id switch
	{
		1 => "red",
		2 => "blue",
		3 => "yellow",
		4 => "lime",
		_ => "transparent"
	};
}